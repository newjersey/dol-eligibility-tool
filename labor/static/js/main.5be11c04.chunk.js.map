{"version":3,"sources":["fonts/Roboto-Regular.ttf","fonts/Roboto-Medium.ttf","fonts/Roboto-Bold.ttf","components/helper-components/Button.tsx","components/helper-components/Card.tsx","components/helper-components/Spinner.tsx","lib/merge.ts","components/helper-components/Markdown.tsx","contexts/language.tsx","hooks/useLocalStorage.ts","components/form-components/DatePicker.tsx","components/form-components/TextInput.tsx","components/helper-components/StyledSelect.tsx","components/form-components/Select.tsx","components/form-components/SingleSelect.tsx","components/form-components/Boolean.tsx","components/helper-components/CircleIcon.tsx","components/form-components/Multiselect.tsx","components/form-components/TextArea.tsx","lib/states.ts","components/form-components/StateSelect.tsx","lib/sections.ts","components/form-components/Caret.tsx","components/form-components/Section.tsx","hooks/useKeyPress.ts","components/form-components/Number.tsx","components/form-components/File.tsx","forms/index.ts","components/form-components/Checkbox.tsx","lib/validation.ts","lib/inline.ts","contexts/form.tsx","components/Sidebar.tsx","components/Question.tsx","components/PDF.tsx","components/Form.tsx","components/USDR.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Button","props","label","rest","className","primary","fill","gap","style","icon","paddingLeft","reverse","paddingRight","paddingTop","paddingBottom","Paragraph","margin","fontWeight","undefined","Card","children","otherProps","Box","background","border","borderRadius","spinning","version","viewBox","width","height","opacity","d","attributeName","type","from","to","dur","repeatCount","Spinner","align","justify","merge","result","sources","source","Object","keys","key","ListItem","styleProps","Markdown","size","headings","map","n","component","Heading","level","vertical","components","li","p","span","a","target","rel","initialState","language","setLanguage","LanguageContext","createContext","LanguageProvider","defaultValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","storedValue","setStoredValue","value","setItem","stringify","useLocalStorage","useEffect","detectedLanguageCode","en","es","zh","navigator","Provider","DatePicker","v","question","useContext","FormContext","values","setValue","id","moment","toDate","maxWidth","pad","horizontal","onChange","date","utc","format","clearIcon","calendarIcon","TextInput","errors","hasError","Boolean","e","StyledSelect","open","setOpen","onOpen","onClose","Select","translateCopy","options","option","name","a11yTitle","top","labelKey","valueKey","reduce","SingleSelectRadio","o","RadioButtonGroup","split","form","instructions","SingleSelect","CircleIcon","color","s","b","flex","shrink","Multiselect","isSelected","includes","bottom","CheckBox","checked","direction","right","fontSize","selectedOptions","selected","push","splice","indexOf","additionalValues","additionalKeys","sections","length","omit","filter","onSelect","TextArea","states","state","StateSelect","getSections","sectionIds","include","section","priorities","forEach","i","ordering","sectionIDs","sortSections","unblocked","Set","nonEmptySections","first","some","s2","add","other","Caret","transform","xmlns","stroke","strokeWidth","Section","optionPressed","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","addEventListener","removeEventListener","useKeyPress","sectionGroup","backgroundColor","index","icons","sort","i1","i2","localeCompare","overflowWrap","transitionDuration","overflow","onClick","title","onToggle","hoverIndicator","maxHeight","content","Number","typeProps","allowNegative","prefix","thousandSeparator","decimalScale","allowEmptyFormatting","mask","customInput","GrommetTextInput","onValueChange","floatValue","File","translateByID","onDrop","acceptedFiles","Promise","all","file","resolve","reader","FileReader","onerror","onabort","onload","contents","encode","readAsArrayBuffer","files","f","useDropzone","minSize","maxSize","accept","getRootProps","getInputProps","isDragActive","isFocused","onRemove","alignContent","outline","cursor","display","left","FormNextLink","Image","src","Checkmark","FormClose","padding","getFlattenedQuestions","questions","flattenedQuestions","switch","getSwitch","subQuestions","typeComponentMappings","shorttext","dropdown","boolean","multiselect","longtext","decimal","NumberComponent","integer","phone","ssn","checkbox","classnames","errored","Sections","questionSwitch","switchKeys","toString","Array","isArray","val","getInstructions","c","Error","isQuestionValid","required","dependencies","validate","schema","copyID","strict","presence","Joi","string","validator","number","precision","min","max","allow","custom","helpers","isValid","find","array","items","regex","object","optional","valid","validation","validationValue","startsWith","slice","RegExp","test","ISO_8601","od","isSameOrAfter","isSameOrBefore","unit","transformInlineDefinitions","definitions","transformInlineDefinitionsQuestions","qi","switchKey","oldSwitch","newSwitch","si","definitionID","replace","definition","pi","pages","setError","FormProvider","setForm","setValues","setErrors","completion","setCompletion","pageIndex","setPageIndex","formValidationError","setFormValidationError","ky","get","text","formSample","yaml","safeLoad","json","sampleContents","message","rawForm","effect","catch","err","useCallback","copy","variables","m","questionID","String","document","description","querySelector","createElement","setAttribute","head","appendChild","log","gtag","amplitude","getInstance","logEvent","newValues","employed_in_new_jersey","benefits","k","validationErrors","newErrors","page","dep","q","depErrors","canContinueFromPage","questionIds","every","canContinue","setPage","scrollTo","clearForm","languages","Sidebar","ResponsiveContext","currentPage","maxCompletedPage","range","j","percent","Math","floor","canClickPage","seal","objectFit","grow","prevLanguage","newLanguage","disabled","FormTrash","marginRight","Text","disabledKey","Question","previous","Component","switchComponent","autoscroll","scrollIntoView","behavior","isNote","isStriped","basis","ref","el","Font","register","family","fonts","regular","medium","bold","styles","StyleSheet","create","flexDirection","fontFamily","pageContent","flexGrow","heading","marginBottom","questionTitle","questionAnswer","sectionTitle","sectionContent","questionSection","borderTop","linkRegex","urlRegex","stripBasicMarkdown","contentParts","finalParts","part","url","marginLeft","Icon","alignItems","justifyContent","PDF","concat","multiselectAnswers","optionId","wrap","marginTop","getValue","isPresentationalQuestion","hasPageBreak","break","Form","pageTitles","pageComponents","previousURL","setPreviousURL","onDownload","fileName","pdf","toBlob","blob","msSaveBlob","body","URL","createObjectURL","click","revokeObjectURL","FormPrevious","FormNext","USDR","Header","Footer","elevation","flexShrink","href","tabIndex","role","aria-label","aria-hidden","fillRule","init","shim","TextEncoder","sizing","theme","global","breakpoints","small","colors","dark","light","focus","control","radius","paragraph","large","xlarge","xxlarge","1","2","3","4","5","6","select","container","radioButton","button","checkBox","check","App","Grommet","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5be11c04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Roboto-Regular.11eabca2.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Medium.58aef543.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Bold.e07df86c.ttf\";","import React from 'react'\nimport { Button as GrommetButton, ButtonProps, Paragraph } from 'grommet'\n\nconst Button: React.FC<ButtonProps & Omit<JSX.IntrinsicElements['button'], 'color'>> = (props) => {\n  const { label, ...rest } = props\n\n  return (\n    <GrommetButton\n      className={props.primary ? 'primary-button' : 'default-button'}\n      fill={false}\n      gap=\"xxsmall\"\n      style={\n        props.icon\n          ? {\n              paddingLeft: props.reverse ? '24px' : '12px',\n              paddingRight: props.reverse ? '12px' : '24px',\n              paddingTop: '6px',\n              paddingBottom: '6px',\n            }\n          : {\n              paddingTop: '6px',\n              paddingBottom: '6px',\n            }\n      }\n      label={\n        label ? (\n          <Paragraph margin=\"none\" style={{ fontWeight: 500 }}>\n            {label}\n          </Paragraph>\n        ) : undefined\n      }\n      {...rest}\n    />\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport { Box, BoxProps } from 'grommet'\n\ninterface Props extends BoxProps {\n  ref?: React.Ref<HTMLDivElement>\n}\n\nconst Card: React.FC<Props> = (props) => {\n  const { children, ...otherProps } = props\n  return (\n    <Box\n      className=\"card\"\n      background=\"#FFFFFF\"\n      style={{\n        border: '2px solid #CCCCCC',\n        borderRadius: '8px',\n      }}\n      {...otherProps}\n    >\n      {children}\n    </Box>\n  )\n}\n\nexport default Card\n","// https://codesandbox.io/s/loaders-and-spinners-4jltk?file=/components/Spinner/SpinnerBrand.js:0-719\n\nimport React from 'react'\nimport { Box } from 'grommet'\n\nconst spinning = (\n  <svg version=\"1.1\" viewBox=\"0 0 32 32\" width=\"28px\" height=\"28px\" fill=\"#7D4CDB\">\n    <path opacity=\".25\" d=\"M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4\" />\n    <path d=\"M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z\">\n      <animateTransform\n        attributeName=\"transform\"\n        type=\"rotate\"\n        from=\"0 16 16\"\n        to=\"360 16 16\"\n        dur=\"0.8s\"\n        repeatCount=\"indefinite\"\n      />\n    </path>\n  </svg>\n)\n\nexport const Spinner = () => (\n  <Box align=\"center\" justify=\"center\">\n    {spinning}\n  </Box>\n)\n","export function merge(...sources: Record<string, any>[]) {\n  const result: Record<string, any> = {}\n  for (const source of sources) {\n    for (const key of Object.keys(source)) {\n      if (source[key]) {\n        result[key] = source[key]\n      }\n    }\n  }\n\n  return result\n}\n","import React from 'react'\nimport { Box, Markdown as GrommetMarkdown, Paragraph, ParagraphProps, Heading } from 'grommet'\nimport { MarginType } from 'grommet/utils'\nimport { merge } from '../../lib/merge'\n\nconst ListItem: React.FC = ({ children, ...styleProps }) => {\n  return (\n    <li>\n      <Paragraph fill={true} margin=\"none\" {...styleProps}>\n        {children}\n      </Paragraph>\n    </li>\n  )\n}\n\ninterface Props {\n  size?: ParagraphProps['size']\n  margin?: MarginType\n}\n\nexport const Markdown: React.FC<Props> = ({ margin, size, children }) => {\n  // Grommet allows you to override what React component is used for various\n  // HTML elements. It handles a few components by default, but there are a few\n  // extra cases we want to handle (or customize).\n  const headings = [1, 2, 3, 4, 5, 6].map((n) => ({\n    [`h${n}`]: {\n      /* eslint-disable-next-line react/display-name */\n      component: (props: any) => <Heading level={n as any} {...props} />,\n      props: merge({ margin: { vertical: n > 4 ? 'none' : 'small' } }, { margin, size }),\n    },\n  }))\n  return (\n    <Box className=\"markdown\">\n      <GrommetMarkdown\n        components={merge(\n          {\n            li: {\n              component: ListItem,\n              props: merge({ margin, size }),\n            },\n            p: {\n              component: Paragraph,\n              props: merge({ fill: true }, { margin, size }),\n            },\n            span: {\n              component: Paragraph,\n              props: merge({ fill: true, size: 'small' }, { margin, size }),\n            },\n            a: {\n              props: { target: '_blank', rel: 'noopener noreferrer' },\n            },\n          },\n          ...headings\n        )}\n      >\n        {children}\n      </GrommetMarkdown>\n    </Box>\n  )\n}\n","import React, { createContext, useEffect } from 'react'\nimport { useLocalStorage } from '../hooks/useLocalStorage'\n\nconst initialState = {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  language: 'en',\n  setLanguage: (language: string) => {},\n}\nexport const LanguageContext = createContext(initialState)\n\nexport const LanguageProvider: React.FC = (props) => {\n  const [language, setLanguage] = useLocalStorage<string>('papua-selected-language', initialState.language)\n\n  // Check the user's browser's language and automatically match that.\n  useEffect(() => {\n    const codeMap: Record<string, string> = {\n      en: 'en',\n      'en-US': 'en',\n      'en-GB': 'en',\n      es: 'es',\n      zh: 'zh',\n    }\n    const detectedLanguageCode = codeMap[navigator.language]\n\n    if (detectedLanguageCode && !language) {\n      setLanguage(detectedLanguageCode)\n    }\n  }, [language, setLanguage])\n\n  const value = { language: language, setLanguage }\n  return <LanguageContext.Provider value={value}>{props.children}</LanguageContext.Provider>\n}\n","import { useState } from 'react'\n\n// Copied from https://usehooks.com/useLocalStorage/\nexport function useLocalStorage<T>(key: string, defaultValue: T): [T, (value: T) => void] {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? JSON.parse(item) : defaultValue\n    } catch (error) {\n      console.error(error)\n      return defaultValue\n    }\n  })\n\n  const setValue = (value: T) => {\n    try {\n      setStoredValue(value)\n      window.localStorage.setItem(key, JSON.stringify(value))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return [storedValue, setValue]\n}\n","import React, { useContext } from 'react'\nimport ReactDatePicker from 'react-date-picker'\nimport './date-picker.css'\nimport { Question } from '../../lib/types'\nimport { FormContext } from '../../contexts/form'\nimport moment from 'moment'\nimport { Box } from 'grommet'\n\nconst DatePicker: React.FC<{ question: Question }> = (props) => {\n  const { question } = props\n  const { values, setValue } = useContext(FormContext)\n  const value = values[question.id] as string | undefined\n\n  let v: Date | undefined\n  if (value) {\n    v = moment(value, 'YYYY-MM-DDTHH:mm:ssZ', true).toDate()\n  }\n\n  const onChange = (date: Date | Date[]) => {\n    if (!date) {\n      setValue(question, undefined)\n      return\n    }\n\n    setValue(question, moment.utc(date as Date).format('YYYY-MM-DDTHH:mm:ssZ'))\n  }\n\n  /**\n   * TODO:\n   * - Would be nice if delete moved your cursor to the previous date chunk\n   *   for example, pressing delete again after having deleted the year\n   *   should move your cursor to the end of your day value.\n   * - On mobile, the keyboard pops up. Good/bad??\n   * - On defocus, the calendar needs to hide.\n   */\n\n  return (\n    <Box style={{ maxWidth: '600px' }} pad={{ horizontal: 'large' }}>\n      <ReactDatePicker className=\"date-picker\" onChange={onChange} value={v} clearIcon={null} calendarIcon={null} />\n    </Box>\n  )\n}\n\nexport default DatePicker\n","import React, { useContext } from 'react'\nimport { Box, TextInput as GrommetTextInput } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport { Question } from '../../lib/types'\n\ninterface Props {\n  question: Question\n}\n\nconst TextInput: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, errors } = useContext(FormContext)\n  const value = values[question.id]\n\n  const hasError = Boolean(errors[question.id])\n  return (\n    <Box pad={{ horizontal: 'large' }}>\n      <GrommetTextInput\n        className={hasError ? 'text-input errored' : 'text-input'}\n        value={(value as string) || ''}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setValue(question, e.target.value)}\n        style={{ maxWidth: '600px' }}\n      />\n    </Box>\n  )\n}\n\nexport default TextInput\n","import React, { useState } from 'react'\nimport { Select as GrommetSelect, Box, SelectProps } from 'grommet'\n\nexport const StyledSelect: React.FC<SelectProps> = (props) => {\n  const [open, setOpen] = useState(false)\n\n  return (\n    <Box style={{ maxWidth: '600px' }} className={open ? 'dropdown dropdown-open' : 'dropdown'}>\n      <GrommetSelect onOpen={() => setOpen(true)} onClose={() => setOpen(false)} {...props} />\n    </Box>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport { Box } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport { StyledSelect } from '../helper-components/StyledSelect'\n\ninterface Props {\n  [key: string]: any\n  question: Question\n}\n\nconst Select: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, translateCopy } = useContext(FormContext)\n  const value = values[question.id]\n\n  if (!props.question) {\n    return <Box />\n  }\n\n  if (!question.options) {\n    console.error('expected question to have options')\n    return null\n  }\n\n  const options = question.options.map((option) => ({ name: translateCopy(option.name), id: option.id }))\n\n  return (\n    <Box pad={{ horizontal: 'large' }}>\n      <StyledSelect\n        a11yTitle={translateCopy(question.name)}\n        margin={{ top: 'xsmall' }}\n        options={options}\n        labelKey=\"name\"\n        valueKey={{\n          key: 'id',\n          reduce: true,\n        }}\n        value={value as string}\n        onChange={({ option }: { option: { id: string; name: string } }) => setValue(question, option.id)}\n      />\n    </Box>\n  )\n}\nexport default Select\n","import React, { useContext, ChangeEvent } from 'react'\nimport { Question } from '../../lib/types'\nimport { Box, RadioButtonGroup } from 'grommet'\nimport { FormContext } from '../../contexts/form'\n\ninterface Props {\n  question: Question\n  onChange?: (id: string) => void\n}\n\nconst SingleSelectRadio: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, translateCopy } = useContext(FormContext)\n\n  const value = values[question.id]\n\n  if (!question || !question.options) {\n    return <Box />\n  }\n\n  const options = question.options.map((o) => {\n    const v = `${question.id}:${o.id}`\n    return {\n      id: v,\n      value: v,\n      name: v,\n      label: translateCopy(o.name),\n    }\n  })\n\n  return (\n    <Box className=\"radio-button-group\" pad={{ horizontal: 'large' }}>\n      <RadioButtonGroup\n        name={translateCopy(question.name) || ''}\n        options={options}\n        value={`${question.id}:${value}`}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => {\n          const id = e.target.value.split(':')[1]\n          props.onChange ? props.onChange(id) : setValue(question, id)\n        }}\n        gap=\"16px\"\n      />\n    </Box>\n  )\n}\n\nexport default SingleSelectRadio\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport SingleSelect from './SingleSelect'\nimport { FormContext } from '../../contexts/form'\n\ninterface Props {\n  [key: string]: any\n  question: Question\n  onChange: (val: string) => void\n}\n\nconst Boolean: React.FC<Props> = (props) => {\n  const { form, setValue } = useContext(FormContext)\n\n  const question = props.question\n  question.options = [\n    {\n      id: 'true',\n      name: form.instructions['yes'],\n    },\n    {\n      id: 'false',\n      name: form.instructions['no'],\n    },\n  ]\n\n  // Override the SingleSelect's onChange in order to cast the ID (string) to a boolean.\n  const onChange = (id: string) => {\n    setValue(question, id === 'true')\n  }\n\n  return <SingleSelect question={question} onChange={onChange} />\n}\n\nexport default Boolean\n","import React from 'react'\nimport { Box, BoxProps } from 'grommet'\nimport './circle-icon.css'\n\nexport interface Props {\n  color: string\n  size?: number\n}\n\nexport const CircleIcon: React.FC<Props & BoxProps & JSX.IntrinsicElements['div']> = (props) => {\n  const { color, ...otherProps } = props\n  const s = `${props.size || 20}px`\n  const b = `${(props.size || 20) / 2}px`\n\n  return (\n    <Box\n      style={{ height: s, width: s, borderRadius: b }}\n      background={{ color }}\n      flex={{ shrink: 0 }}\n      justify=\"center\"\n      align=\"center\"\n      className=\"circle-icon\"\n      margin=\"none\"\n      {...otherProps}\n    >\n      {props.children}\n    </Box>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Question, Option } from '../../lib/types'\nimport { Box, CheckBox, Paragraph } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport { omit } from 'lodash'\nimport { CircleIcon } from '../helper-components/CircleIcon'\n\ninterface Props {\n  value: string[]\n  question: Question\n  onChange: (val: string[]) => void\n  [key: string]: any\n}\n\nconst Multiselect: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, translateCopy } = useContext(FormContext)\n  const value = values[question.id] as string[] | string\n\n  const onSelect = (option: Option) => {\n    // Handle the state of the multiselect, first.\n    const selectedOptions = value ? [...value] : []\n    const selected = !selectedOptions.includes(option.id)\n    if (selected) {\n      // Case A: User selected this option\n      selectedOptions.push(option.id)\n    } else {\n      // Case B: User deselected this option\n      selectedOptions.splice(selectedOptions.indexOf(option.id), 1)\n    }\n\n    // Now handle the additional keys\n    const additionalValues: Record<string, Record<string, Option[]> | undefined> = {}\n    for (const key of question.additionalKeys?.split(',') || []) {\n      if (!option[key]) {\n        continue\n      }\n\n      // Each entry in additionalValues maps a key (f.e. \"benefits\") to a mapping of\n      // section ID to a list of options that enabled that section.\n      additionalValues[key] = { ...(values[key] as any) }\n\n      // Based on whether we just enabled or disabled this option, add/remove this option\n      // from each of the corresponding section.\n      const sections = (option[key] as string).split(',')\n      if (selected) {\n        for (const s of sections) {\n          additionalValues[key]![s] = [...(additionalValues[key]![s] || []), option]\n        }\n      } else {\n        for (const s of sections) {\n          if (additionalValues[key]![s].length === 1) {\n            // If this option is the only option associated with this section, omit the section.\n            additionalValues[key] = omit(additionalValues[key], s)\n          } else {\n            additionalValues[key]![s] = additionalValues[key]![s].filter((o) => o.id !== option.id)\n          }\n        }\n      }\n\n      // If all sections are now hidden, omit this section group key.\n      if (Object.keys(additionalValues[key]!).length === 0) {\n        additionalValues[key] = undefined\n      }\n    }\n\n    setValue(question, selectedOptions.length > 0 ? selectedOptions : undefined, additionalValues)\n  }\n\n  if (!question || !question.options) {\n    return <Box />\n  }\n\n  return (\n    <Box pad={{ horizontal: 'large' }}>\n      {question.options.map((o) => {\n        const isSelected = Boolean(value && value.includes(o.id))\n        return (\n          <Box\n            className={isSelected ? 'checkbox checkbox-selected' : 'checkbox'}\n            key={o.id}\n            margin={{ bottom: '16px' }}\n          >\n            <CheckBox\n              checked={isSelected}\n              label={\n                <Box direction=\"row\">\n                  {o.icon && (\n                    <Box direction=\"column\" justify=\"start\" flex={{ shrink: 0 }} margin={{ right: '16px' }}>\n                      <CircleIcon color={o.icon.color} size={24}>\n                        <Paragraph\n                          fill={true}\n                          margin=\"none\"\n                          color=\"white\"\n                          style={{ fontWeight: 500, fontSize: '16px' }}\n                        >\n                          {o.icon.label}\n                        </Paragraph>\n                      </CircleIcon>\n                    </Box>\n                  )}\n                  <Paragraph margin=\"none\" fill={true}>\n                    {translateCopy(o.name)}\n                  </Paragraph>\n                </Box>\n              }\n              onChange={() => onSelect(o)}\n            />\n          </Box>\n        )\n      })}\n    </Box>\n  )\n}\n\nexport default Multiselect\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport { Box, TextArea as GrommetTextArea } from 'grommet'\nimport { FormContext } from '../../contexts/form'\n\ninterface Props {\n  question: Question\n  [key: string]: any\n}\n\nconst TextArea: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, errors } = useContext(FormContext)\n  const hasError = errors[question.id]\n\n  return (\n    <Box pad={{ horizontal: 'large' }}>\n      <GrommetTextArea\n        value={values[question.id] as string}\n        onChange={(e) => setValue(question, e.target.value)}\n        style={{ border: hasError ? '#FF4040 1px solid' : 'black 1px solid' }}\n      />\n    </Box>\n  )\n}\n\nexport default TextArea\n","import { Option } from './types'\n\nconst initialStates = [\n  { name: 'Alabama', id: 'al' },\n  { name: 'Alaska', id: 'ak' },\n  { name: 'American Samoa', id: 'as' },\n  { name: 'Arizona', id: 'az' },\n  { name: 'Arkansas', id: 'ar' },\n  { name: 'California', id: 'ca' },\n  { name: 'Colorado', id: 'co' },\n  { name: 'Connecticut', id: 'ct' },\n  { name: 'Delaware', id: 'de' },\n  { name: 'District Of Columbia', id: 'dc' },\n  { name: 'Federated States Of Micronesia', id: 'fm' },\n  { name: 'Florida', id: 'fl' },\n  { name: 'Georgia', id: 'ga' },\n  { name: 'Guam', id: 'gu' },\n  { name: 'Hawaii', id: 'hi' },\n  { name: 'Idaho', id: 'id' },\n  { name: 'Illinois', id: 'il' },\n  { name: 'Indiana', id: 'in' },\n  { name: 'Iowa', id: 'ia' },\n  { name: 'Kansas', id: 'ks' },\n  { name: 'Kentucky', id: 'ky' },\n  { name: 'Louisiana', id: 'la' },\n  { name: 'Maine', id: 'me' },\n  { name: 'Marshall Islands', id: 'mh' },\n  { name: 'Maryland', id: 'md' },\n  { name: 'Massachusetts', id: 'ma' },\n  { name: 'Michigan', id: 'mi' },\n  { name: 'Minnesota', id: 'mn' },\n  { name: 'Mississippi', id: 'ms' },\n  { name: 'Missouri', id: 'mo' },\n  { name: 'Montana', id: 'mt' },\n  { name: 'Nebraska', id: 'ne' },\n  { name: 'Nevada', id: 'nv' },\n  { name: 'New Hampshire', id: 'nh' },\n  { name: 'New Jersey', id: 'nj' },\n  { name: 'New Mexico', id: 'nm' },\n  { name: 'New York', id: 'ny' },\n  { name: 'North Carolina', id: 'nc' },\n  { name: 'North Dakota', id: 'nd' },\n  { name: 'Northern Mariana Islands', id: 'mp' },\n  { name: 'Ohio', id: 'oh' },\n  { name: 'Oklahoma', id: 'ok' },\n  { name: 'Oregon', id: 'or' },\n  { name: 'Palau', id: 'pw' },\n  { name: 'Pennsylvania', id: 'pa' },\n  { name: 'Puerto Rico', id: 'pr' },\n  { name: 'Rhode Island', id: 'ri' },\n  { name: 'South Carolina', id: 'sc' },\n  { name: 'South Dakota', id: 'sd' },\n  { name: 'Tennessee', id: 'tn' },\n  { name: 'Texas', id: 'tx' },\n  { name: 'Utah', id: 'ut' },\n  { name: 'Vermont', id: 'vt' },\n  { name: 'Virgin Islands', id: 'vi' },\n  { name: 'Virginia', id: 'va' },\n  { name: 'Washington', id: 'wa' },\n  { name: 'West Virginia', id: 'wv' },\n  { name: 'Wisconsin', id: 'wi' },\n  { name: 'Wyoming', id: 'wy' },\n]\n\nexport const states: Option[] = initialStates.map((state) => ({\n  name: {\n    en: state.name,\n    es: state.name,\n    zh: state.name,\n  },\n  id: state.id,\n}))\n","import React from 'react'\nimport { states } from '../../lib/states'\nimport Select from './Select'\nimport { Question } from '../../lib/types'\n\ninterface Props {\n  question: Question\n}\n\nconst StateSelect: React.FC<Props> = (props) => {\n  const { question } = props\n  question.options = states\n  return <Select question={question} />\n}\n\nexport default StateSelect\n","import { Question, Values, Form, Section, Option } from '../lib/types'\n\nexport function getSections(\n  sectionIds: Question['sections'],\n  form: Form,\n  values: Values\n): Array<{ section: Section; options: Option[] }> {\n  const { sections } = form\n  if (!sections || !sectionIds) {\n    return []\n  }\n\n  // If we are just directly specifying the list of sections (a Single Select),\n  // just return that.\n  if (sectionIds.include) {\n    return sectionIds.include.map((id) => ({\n      section: sections[id],\n      options: [],\n    }))\n  }\n\n  // Otherwise, we're producing this list of sections from a Multiselect.\n  // In this case, the logic is a bit more complicated.\n  //\n  // We'll produce an ordered list of sections that should be shown.\n  // Each option will provide an ordered list of sections to enable,\n  // which we'll merge together, for example:\n  //\n  //  Option A: ['UA', 'UI-NJ', 'ESL']\n  //  Option B: ['UI-NJ', 'ESL', 'ESIJ']\n  //\n  // Would produce: ['UA', 'UI-NJ', 'ESL', 'ESIJ'].\n  //\n  // You could imagine this as a graph, where every section is a node, and\n  // order is represented by edges between these nodes:\n  //\n  //   Option A: UA <- UI-NJ\n  //   Option B:            <- ESL <- ESIJ\n  //\n  // However, what happens if Option B did not have 'ESL'? In that case, it\n  // wouldn't be clear whether we should place 'ESL' or 'ESIJ' first.\n  //\n  // In that case, we rely on the ordering of sections, as defined in form.yml,\n  // to break ties. We'll refer to this as the section's \"priority\".\n\n  // 1. Look up the priority of all sections:\n  const priorities: Record<string, number> = {}\n  Object.keys(sections).forEach((id, i) => {\n    priorities[id] = i\n  })\n\n  // 2. Produce an ordered list of sections by option:\n  const ordering: Record<string, string[]> = {}\n  // TODO: cleanup this values representation. It can just be a list of options.\n  const value = (values[sectionIds.id!] as Record<string, Option[]>) || {}\n  for (const options of Object.values(value)) {\n    for (const option of options) {\n      // Options can appear more than once, but we only need to pull their list of sections\n      // once, thus the if statement here.\n      if (!ordering[option.id]) {\n        const sectionIDs = (option[sectionIds.id!] as string).split(',')\n        ordering[option.id] = sectionIDs\n      }\n    }\n  }\n\n  const sorted = sortSections(ordering, priorities)\n\n  return sorted.map((id) => ({ section: sections[id], options: value[id] }))\n}\n\nexport function sortSections(ordering: Record<string, string[]>, priorities: Record<string, number>): string[] {\n  // console.log(ordering, priorities)\n\n  // Note: for our use-cases, the number of sections is small. So this just needs to work, not be efficient.\n  const unblocked = new Set<string>()\n  const nonEmptySections = Object.values(ordering).filter((sections) => sections.length > 0)\n  if (nonEmptySections.length === 0) {\n    // Recursive base case.\n    return []\n  }\n\n  for (const s1 of nonEmptySections) {\n    const first = s1[0]\n    const blocked = nonEmptySections.some((s2) => s2.indexOf(first) > 0)\n    if (!blocked) {\n      unblocked.add(first)\n    }\n  }\n\n  let section: string\n  if (unblocked.size > 0) {\n    // We found one or more sections that we could choose next, which don't have\n    // an ordering constraint on another section.\n    // In this case, choose the section from this list with lowest priority.\n    section = [...unblocked][0]\n    for (const other of unblocked) {\n      if (priorities[other] < priorities[section]) {\n        section = other\n      }\n    }\n  } else {\n    // In this case, we found at least one cycle which means there are no sections\n    // without an ordering constraint that prevents us from selecting them. In that\n    // case, we have to relax one of these ordering constraints.\n    //\n    // We'll do this by just picking the lowest priority section next. Technically,\n    // this isn't right -- we should find the cycle and break it. But that's pretty\n    // complicated -- a best-effort solution like this works fine for us.\n    section = nonEmptySections[0][0]\n    for (const sections of nonEmptySections) {\n      const other = sections[0]\n      if (priorities[other] < priorities[section]) {\n        section = other\n      }\n    }\n  }\n\n  // console.log(section)\n  for (const id of Object.keys(ordering)) {\n    const i = ordering[id].indexOf(section)\n    if (i >= 0) {\n      ordering[id].splice(i, 1)\n    }\n  }\n  // console.log(ordering, priorities)\n\n  return [section, ...sortSections(ordering, priorities)]\n}\n","import React from 'react'\n\nconst Caret: React.FC<{ open: boolean }> = (props) => {\n  return (\n    <svg\n      transform={props.open ? 'rotate(90)' : undefined}\n      width=\"9\"\n      height=\"14\"\n      viewBox=\"0 0 9 14\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"caret\"\n    >\n      <path d=\"M1 1L7 7L1 13\" stroke=\"#333333\" strokeWidth=\"2\" />\n    </svg>\n  )\n}\n\nexport default Caret\n","import React, { useContext, useState } from 'react'\nimport { Question } from '../../lib/types'\nimport { FormContext } from '../../contexts/form'\nimport { getSections } from '../../lib/sections'\nimport { Box, Heading, Paragraph } from 'grommet'\nimport { Markdown } from '../helper-components/Markdown'\nimport Caret from './Caret'\nimport { useKeyPress } from '../../hooks/useKeyPress'\nimport { CircleIcon } from '../helper-components/CircleIcon'\n\ninterface Props {\n  question: Question\n}\n\nconst Section: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, form, translateCopy } = useContext(FormContext)\n  const [open, setOpen] = useState<Record<string, boolean>>({})\n  const optionPressed = useKeyPress('Alt')\n\n  if (!question.sections) {\n    // A sections field should always be specified for section question types.\n    return null\n  }\n\n  const sectionGroup = getSections(question.sections, form, values)\n\n  const onToggle = (e: React.MouseEvent, id: string) => {\n    // Handle Alt-pressing, which should expand/collapse all.\n    if (!optionPressed) {\n      // Just expand/collapse this specific option.\n      setOpen({\n        ...open,\n        [id]: !open[id],\n      })\n    } else if (Object.keys(open).length > 0) {\n      // The user alt-clicked and at least one option is open, so collapse all.\n      setOpen({})\n    } else {\n      // The user alt-clicked and all options are closed, so expand all.\n      const o: Record<string, boolean> = {}\n      for (const { section } of sectionGroup) {\n        o[section.title.en] = true\n      }\n      setOpen(o)\n    }\n  }\n\n  return (\n    <Box style={{ backgroundColor: question.sections.color }} pad={{ horizontal: 'large', vertical: 'large' }}>\n      <Heading level={3} margin=\"none\">\n        {translateCopy(question.sections.name)}\n      </Heading>\n      {question.sections.instructions && (\n        <Markdown margin={{ top: 'small' }} size=\"small\">\n          {translateCopy(question.sections.instructions)}\n        </Markdown>\n      )}\n      {sectionGroup.map(({ section, options }, index) => {\n        const icons = options.filter((o) => !!o.icon).map((o) => o.icon!)\n        icons.sort((i1, i2) => i1.label.localeCompare(i2.label))\n        return (\n          <Box\n            background=\"#FFFFFF\"\n            style={{\n              border: '1px solid #CCCCCC',\n              borderRadius: '4px',\n              overflowWrap: 'break-word',\n              transitionDuration: '.2s',\n            }}\n            justify=\"between\"\n            key={`section_${index}`}\n            margin={{ top: 'small' }}\n            className=\"accordion\"\n            overflow=\"hidden\"\n          >\n            <Box\n              height=\"70px\"\n              direction=\"row\"\n              align=\"center\"\n              justify=\"between\"\n              onClick={(e: React.MouseEvent) => onToggle(e, section.title.en)}\n              pad={{ horizontal: '24px' }}\n              className=\"accordion-header\"\n              background={open[section.title.en] ? '#F8F8F8' : '#FFFFFF'}\n              hoverIndicator={{\n                color: '#F8F8F8',\n              }}\n            >\n              <Box>\n                <Heading margin=\"none\" level={5} style={{ color: 'black' }}>\n                  {translateCopy(section.title)}\n                </Heading>\n              </Box>\n              <Box direction=\"row\" justify=\"end\" align=\"center\" flex={{ shrink: 0 }}>\n                {icons.map((icon, i) => (\n                  <Box\n                    direction=\"column\"\n                    justify=\"center\"\n                    flex={{ shrink: 0 }}\n                    margin={{ right: i === icons.length - 1 ? '16px' : '8px' }}\n                    key={icon.label}\n                  >\n                    <CircleIcon color={icon.color} size={24}>\n                      <Paragraph fill={true} margin=\"none\" color=\"white\" style={{ fontWeight: 500, fontSize: '16px' }}>\n                        {icon.label}\n                      </Paragraph>\n                    </CircleIcon>\n                  </Box>\n                ))}\n                <Caret open={open[section.title.en]} />\n              </Box>\n            </Box>\n            <Box\n              pad={{ horizontal: '24px' }}\n              className=\"accordion-content\"\n              style={{ maxHeight: open[section.title.en] ? '500px' : '0px' }}\n            >\n              <Box pad={{ vertical: '16px' }}>\n                <Markdown size=\"small\">{translateCopy(section.content)}</Markdown>\n              </Box>\n            </Box>\n          </Box>\n        )\n      })}\n    </Box>\n  )\n}\n\nexport default Section\n","import { useState, useEffect } from 'react'\n\n// https://usehooks.com/useKeyPress/\nexport const useKeyPress = (targetKey: string) => {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false)\n\n  // Add event listeners\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n    function downHandler(e: KeyboardEvent) {\n      if (e.key === targetKey) {\n        setKeyPressed(true)\n      }\n    }\n\n    // If released key is our target key then set to false\n    const upHandler = (e: KeyboardEvent) => {\n      if (e.key === targetKey) {\n        setKeyPressed(false)\n      }\n    }\n\n    window.addEventListener('keydown', downHandler)\n    window.addEventListener('keyup', upHandler)\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler)\n      window.removeEventListener('keyup', upHandler)\n    }\n  }, [setKeyPressed, targetKey]) // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed\n}\n","import React, { useContext } from 'react'\nimport { Box, TextInput as GrommetTextInput } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport { Question } from '../../lib/types'\nimport NumberFormat, { NumberFormatProps } from 'react-number-format'\n\ninterface Props {\n  question: Question\n}\n\nexport const Number: React.FC<Props> = (props) => {\n  const { question } = props\n  const { setValue, errors } = useContext(FormContext)\n\n  const onChange: NumberFormatProps['onValueChange'] = ({ floatValue }) => {\n    setValue(question, floatValue)\n  }\n\n  let typeProps: Partial<NumberFormatProps> = {\n    type: 'tel',\n    allowNegative: false,\n  }\n  if (question.type === 'dollar-amount') {\n    typeProps = {\n      ...typeProps,\n      prefix: '$',\n      thousandSeparator: true,\n      decimalScale: 2,\n    }\n  } else if (question.type === 'integer') {\n    typeProps = {\n      ...typeProps,\n      decimalScale: 0,\n    }\n  } else if (question.type === 'decimal') {\n    typeProps = {\n      ...typeProps,\n      thousandSeparator: true,\n      decimalScale: 2,\n    }\n  } else if (question.type === 'phone') {\n    typeProps = {\n      ...typeProps,\n      decimalScale: 0,\n      format: '+1 (###) ###-####',\n      allowEmptyFormatting: true,\n      mask: '_',\n    }\n  } else if (question.type === 'ssn') {\n    typeProps = {\n      ...typeProps,\n      decimalScale: 0,\n      format: '###-##-####',\n      allowEmptyFormatting: true,\n      mask: '_',\n    }\n  }\n\n  const hasError = Boolean(errors[question.id])\n  return (\n    <Box pad={{ horizontal: 'large' }}>\n      <NumberFormat\n        className={hasError ? 'text-input errored' : 'text-input'}\n        customInput={GrommetTextInput}\n        onValueChange={onChange}\n        style={{ maxWidth: '600px' }}\n        {...typeProps}\n      />\n    </Box>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Question, FileValues, FileValue } from '../../lib/types'\nimport { FormContext } from '../../contexts/form'\nimport { FormNextLink, Checkmark, FormClose } from 'grommet-icons'\nimport { useDropzone } from 'react-dropzone'\nimport { Box, Button, Paragraph, Image } from 'grommet'\nimport { encode } from 'base64-arraybuffer'\nimport './file.css'\nimport { CircleIcon } from '../helper-components/CircleIcon'\n\ninterface Props {\n  [key: string]: any\n  question: Question\n  onChange: (val: string) => void\n}\n\n/**\n * This File component is used to upload a single image or PDF file.\n * It supports drag-and-drop, file upload and image capture.\n *\n * It's built on top of:\n *  - React Dropzone: https://react-dropzone.js.org/\n *  - FileReader API: https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n *\n * The contents of the uploaded file are stored as a base64-encoded binary string\n * inside of the corresponding form value. In the future, we may consider uploading to S3\n * and storing an S3 URL as a form value, but embeddeding the file inside of the\n * claim will make it easier to integrate with state backends and likely means we\n * can get something out the door sooner.\n */\nconst File: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, translateByID } = useContext(FormContext)\n  const value = values[question.id] as FileValues | undefined\n\n  const onDrop = async (acceptedFiles: File[]) => {\n    const files = await Promise.all(\n      acceptedFiles.map((file) => {\n        return new Promise<FileValue | undefined>((resolve) => {\n          const reader = new FileReader()\n\n          reader.onerror = () => {\n            resolve()\n          }\n          reader.onabort = () => {\n            resolve()\n          }\n          // onload fired only after the read operation has finished\n          reader.onload = () => {\n            resolve({\n              name: file.name,\n              type: file.type,\n              size: file.size,\n              contents: encode(reader.result as ArrayBuffer),\n            })\n          }\n          reader.readAsArrayBuffer(file)\n        })\n      })\n    )\n\n    setValue(question, [...(value || []), ...(files.filter((f) => !!f) as FileValue[])])\n  }\n\n  const { getRootProps, getInputProps, isDragActive, isFocused } = useDropzone({\n    minSize: 100, // arbitrary min > 0 (100B)\n    maxSize: 4194304, // 4MB\n    // This handler is fired both on valid and invalid files.\n    onDrop,\n    // Accept PNGs, JPGs and PDFs\n    accept: ['image/png', 'image/jpeg', 'image/jpg', 'application/pdf'],\n  })\n\n  const onRemove = () => {\n    setValue(question, undefined)\n  }\n\n  const color = isDragActive || isFocused ? '#4776F6' : '#CCCCCC'\n\n  return (\n    <>\n      <Box\n        pad=\"large\"\n        gap=\"small\"\n        alignContent=\"center\"\n        align=\"center\"\n        style={{\n          outline: `2px dashed ${color}`,\n          cursor: 'pointer',\n        }}\n        background={{\n          color: '#F6F7F9',\n        }}\n        className=\"file-upload-box\"\n        margin={{ bottom: '12px' }}\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        <Paragraph margin={{ vertical: 'none' }} color=\"black\">\n          {translateByID('file-uploader-drag-drop')}\n        </Paragraph>\n        <Paragraph margin={{ vertical: 'none' }} color=\"black\">\n          {translateByID('file-uploader-or')}\n        </Paragraph>\n        <Paragraph margin={{ vertical: 'none' }} color=\"#4776F6\" style={{ display: 'flex', fontWeight: 600 }}>\n          {translateByID('file-uploader-choose-file')}\n          <CircleIcon color=\"#4776F6\" margin={{ left: '6px' }}>\n            <FormNextLink color=\"white\" className=\"file-upload-icon\" />\n          </CircleIcon>\n        </Paragraph>\n      </Box>\n      {value &&\n        value.map((v, i) => (\n          <Box direction=\"row\" pad=\"medum\" height=\"75px\" key={i} align=\"center\" justify=\"between\">\n            <Box direction=\"row\">\n              {/* TODO: use other SVGs for PDF/JPEG/etc. when those are available */}\n              <Image src=\"/file.jpg.svg\" width=\"45px\" />\n              <Paragraph margin={{ left: '12px', bottom: '12px' }}>{v.name}</Paragraph>\n            </Box>\n            <Box direction=\"row\" align=\"center\">\n              <Paragraph margin={{ vertical: 'none', right: '12px' }}>\n                {translateByID('file-uploader-uploaded')}\n              </Paragraph>\n              <CircleIcon color=\"#4776F6\">\n                <Checkmark color=\"white\" style={{ width: '12px', height: '12px' }} />\n              </CircleIcon>\n              <Button\n                icon={<FormClose />}\n                onClick={onRemove}\n                size=\"small\"\n                margin={{ left: '20px' }}\n                style={{\n                  borderRadius: '20px',\n                  padding: '3px',\n                }}\n                primary={true}\n                color=\"#eee\"\n                hoverIndicator={{\n                  color: 'lightgrey',\n                }}\n              />\n            </Box>\n          </Box>\n        ))}\n    </>\n  )\n}\n\nexport default File\n","import { Question, QuestionType, Page, Values, Errors } from '../lib/types'\nimport DatePicker from '../components/form-components/DatePicker'\nimport TextInput from '../components/form-components/TextInput'\nimport Select from '../components/form-components/Select'\nimport SingleSelect from '../components/form-components/SingleSelect'\nimport Boolean from '../components/form-components/Boolean'\nimport Multiselect from '../components/form-components/Multiselect'\nimport TextArea from '../components/form-components/TextArea'\nimport StateSelect from '../components/form-components/StateSelect'\nimport Sections from '../components/form-components/Section'\nimport { Number as NumberComponent } from '../components/form-components/Number'\nimport File from '../components/form-components/File'\nimport { Checkbox } from '../components/form-components/Checkbox'\nimport { Box } from 'grommet'\n\n/**\n * Determines if a user can proceed to the next form, if they have:\n * 1) Finished all required questions\n * 2) There are no validation errors\n * @param page\n * @param values\n * @param errors\n */\nexport function canContinue(page: Page, values: Values, errors: Errors): boolean {\n  if (!page) {\n    return true\n  }\n\n  const questions = getFlattenedQuestions(page.questions, values)\n  const questionIds = questions.map((q) => q.id)\n  const requiredQuestions = questions.filter((q) => q.required).map((q) => q.id)\n  return requiredQuestions.every((id) => values[id] !== undefined) && !questionIds.some((id) => errors[id])\n}\n\n/**\n * Given a set of questions, generates a flattened list of 'relevant' questions, including subquestions from switches.\n * @param questions\n * @param values\n */\nexport function getFlattenedQuestions(questions: Question[], values: Values): Question[] {\n  const flattenedQuestions: Question[] = []\n\n  for (const question of questions) {\n    flattenedQuestions.push(question)\n    const { id } = question\n\n    const value = values[id] as string\n    const hasSubQuestions = value !== undefined && question.switch && getSwitch(question.switch, value)\n\n    if (hasSubQuestions) {\n      const subQuestions = getSwitch(question.switch, value)\n      flattenedQuestions.push(...getFlattenedQuestions(subQuestions, values))\n    }\n  }\n\n  return flattenedQuestions\n}\n\nconst typeComponentMappings: Partial<Record<QuestionType, React.FC>> = {\n  shorttext: TextInput as React.FC,\n  date: DatePicker as React.FC,\n  dropdown: Select as React.FC,\n  'single-select': SingleSelect as React.FC,\n  boolean: Boolean as React.FC,\n  multiselect: Multiselect as React.FC,\n  longtext: TextArea as React.FC,\n  'instructions-only': Box,\n  'warning-only': Box,\n  'state-picker': StateSelect as React.FC,\n  decimal: NumberComponent as React.FC,\n  integer: NumberComponent as React.FC,\n  'dollar-amount': NumberComponent as React.FC,\n  phone: NumberComponent as React.FC,\n  ssn: NumberComponent as React.FC,\n  file: File as React.FC,\n  checkbox: Checkbox as React.FC,\n  sections: Sections as React.FC,\n}\n\nexport function getComponent(type: QuestionType): React.FC<{ question: Question }> {\n  return typeComponentMappings[type] || TextInput\n}\n\nexport function getSwitch(questionSwitch: Question['switch'], value: string | string[]): Question[] {\n  if (!questionSwitch || value === undefined) {\n    return []\n  }\n  const switchKeys = Object.keys(questionSwitch).filter((key) => {\n    return (\n      key.split(',').includes(value.toString()) ||\n      (Array.isArray(value) && (value as string[]).some((val) => key.split(',').includes(val)))\n    )\n  })\n\n  if (switchKeys.length === 0) {\n    return []\n  }\n\n  // In case this is a multiselect, always choose the last switch.\n  const switchKey = switchKeys[switchKeys.length - 1]\n\n  // NOTE: we inline definitions in transformInlineDefinitions above, so it'll always be Question[].\n  return questionSwitch[switchKey] as Question[]\n}\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport { CheckBox as GrommetCheckBox, Paragraph, Box } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport classnames from 'classnames'\n\ninterface Props {\n  question: Question\n}\n\nexport const Checkbox: React.FC<Props> = (props) => {\n  const { question, ...rest } = props\n  const { values, setValue, translateCopy, errors } = useContext(FormContext)\n\n  const value = values[question.id]\n  const hasError = Boolean(errors[question.id])\n\n  return (\n    <Box\n      className={classnames('checkbox', {\n        'checkbox-selected': !!value,\n        errored: hasError,\n      })}\n      margin=\"none\"\n      pad={{ horizontal: 'large' }}\n    >\n      <GrommetCheckBox\n        checked={value === true}\n        label={<Paragraph margin=\"none\">{translateCopy(question.options![0].name)}</Paragraph>}\n        onChange={() => setValue(question, !value)}\n        {...rest}\n      />\n    </Box>\n  )\n}\n","import { Question, Copy, Form, Values, Value } from './types'\nimport validator from 'email-validator'\nimport Joi from '@hapi/joi'\nimport moment from 'moment'\nimport { states } from './states'\n\nfunction getInstructions(form: Form, id: string): Copy {\n  const c = form.instructions[id]\n  if (!c) {\n    throw new Error(`Unknown instructions id: ${id}`)\n  }\n  return c\n}\n\nexport function isQuestionValid(\n  question: Question,\n  value: Value,\n  values: Values,\n  form: Form\n): { errors: Copy[]; dependencies: string[] } {\n  const errors: Copy[] = []\n\n  // Handle required-field checks.\n  if (value === undefined) {\n    if (question.required) {\n      errors.push(getInstructions(form, 'field-is-required'))\n      return { errors, dependencies: [] }\n    } else {\n      // If the question is not required and not set,\n      // go ahead and exit early so we don't surface unnecessary errors.\n      return { errors: [], dependencies: [] }\n    }\n  }\n\n  function validate<T>(schema: Joi.Schema, value: any, copyID: string): value is T {\n    const { error } = schema.strict().options({ presence: 'required' }).validate(value)\n    if (error) {\n      errors.push(getInstructions(form, copyID!))\n      if (process.env.NODE_ENV === 'development') {\n        console.error(error)\n      }\n    }\n    return !error\n  }\n\n  // Handle type-specified validation, which is generic\n  // to the question itself.\n  switch (question.type) {\n    case 'email':\n      if (validate<string>(Joi.string(), value, 'invalid-email')) {\n        if (!validator.validate(value)) {\n          errors.push(getInstructions(form, 'invalid-email'))\n        }\n      }\n      break\n    case 'decimal':\n      validate(Joi.number().precision(2).min(0).max(2147483647), value, 'invalid-decimal')\n      break\n    case 'integer':\n      validate(Joi.number().precision(0).min(0).max(2147483647), value, 'invalid-integer')\n      break\n    case 'dollar-amount':\n      validate(Joi.number().precision(2).min(0).max(2147483647), value, 'invalid-dollar')\n      break\n    case 'shorttext':\n    case 'longtext':\n      validate(\n        Joi.string()\n          .allow(...(question.required ? [] : ['']))\n          .max(question.type === 'shorttext' ? 200 : 10000),\n        value,\n        'invalid-text'\n      )\n      break\n    case 'date':\n      // We should be able to replicate this with joi-date, but I didn't have much\n      // luck with that. Kept hitting undocumented issues with the format function.\n      validate(\n        Joi.string().custom((v: string, helpers) => {\n          const strict = true\n          return moment(v, 'YYYY-MM-DDTHH:mm:ssZ', strict).isValid() ? v : helpers.error('any.invalid')\n        }),\n        value,\n        'invalid-date'\n      )\n      break\n    case 'dropdown':\n    case 'single-select':\n    case 'state-picker':\n      if (validate<string>(Joi.string(), value, 'invalid-select')) {\n        const options = question.type === 'state-picker' ? states : question.options\n        // Check if we selected a pre-defined option id:\n        if (!options?.find((o) => o.id === value)) {\n          errors.push(getInstructions(form, 'invalid-select'))\n        }\n      }\n      break\n    case 'multiselect':\n      if (validate<string[]>(Joi.array().items(Joi.string()), value, 'invalid-select')) {\n        const invalid = value.some((v) => {\n          return !question.options?.find((o) => o.id === v)\n        })\n        if (invalid) {\n          errors.push(getInstructions(form, 'invalid-select'))\n        }\n      }\n      break\n    case 'boolean':\n      validate(Joi.boolean(), value, 'invalid-boolean')\n      break\n    case 'phone':\n      validate(Joi.number().precision(0).min(1000000000).max(9999999999), value, 'invalid-phone')\n      break\n    case 'ssn':\n      validate(Joi.number().precision(0).min(100000000).max(999999999), value, 'invalid-ssn')\n      break\n    case 'arn':\n      validate(Joi.string().regex(/^A[0-9]{7,9}$/), value, 'invalid-arn')\n      break\n    case 'address':\n      // TODO: we should do more validation than this for address, but this depends on the new\n      // UI for entering addresses.\n      validate(Joi.string(), value, 'invalid-address')\n      break\n    case 'instructions-only':\n      // There should not be an answer for this question.\n      errors.push(getInstructions(form, 'invalid-instructions-only'))\n      break\n    case 'file':\n      validate(\n        Joi.array()\n          .min(question.required ? 1 : 0)\n          .max(10)\n          .items(\n            Joi.object({\n              name: Joi.string().optional(),\n              type: Joi.string().valid('image/png', 'image/jpeg', 'image/jpg', 'application/pdf'),\n              size: Joi.number().min(0),\n              contents: Joi.string().min(1),\n            })\n          ),\n        value,\n        'invalid-file'\n      )\n      break\n    case 'checkbox':\n      if (value !== true) {\n        errors.push(getInstructions(form, 'invalid-checkbox'))\n      }\n  }\n\n  // Handle question-specific validation, as specified in the form.\n  const dependencies: string[] = []\n  question.validate?.forEach((validation) => {\n    const { type, value: validationValue, error } = validation\n\n    if (typeof validationValue === 'string' && validationValue.startsWith('id:')) {\n      // If this validation depends on another question, then we'll need to\n      // reevaluate the error state of that field. We track that with dependencies\n      // and the caller of this function is responsible for handling that.\n      dependencies.push(validationValue.slice(3))\n    }\n\n    let isValid\n    if (type === 'regex') {\n      const regex = new RegExp(validationValue as string)\n      isValid = typeof value === 'string' && regex.test(value)\n    } else if (type === 'matches_field') {\n      const id = validationValue.slice(3)\n      isValid = value === values[id]\n    } else if (type === 'min' || type === 'max') {\n      if (question.type === 'date') {\n        const d = moment(value as string, moment.ISO_8601)\n        if (validationValue.startsWith('id:')) {\n          // Compare this date to the corresponding date based on the supplied id.\n          const id = validationValue.slice(3)\n          const other = values[id]\n          if (other === undefined) {\n            // If we haven't specified the other date yet, don't consider that an error.\n            isValid = true\n          } else {\n            const od = moment(other as string, moment.ISO_8601)\n            isValid = type === 'min' ? d.isSameOrAfter(od) : d.isSameOrBefore(od)\n          }\n        } else {\n          // Compare this date to the relative date specified (f.e. \"-14y\").\n          const unit = validationValue[validationValue.length - 1] as 'y' | 'd'\n          const n = Number(validationValue.slice(0, validationValue.length - 1))\n          const p = moment().add(n, unit)\n          isValid = type === 'min' ? d >= p : d <= p\n        }\n      }\n    }\n\n    if (!isValid) {\n      errors.push(error)\n    }\n  })\n\n  return { errors, dependencies }\n}\n","import { Form, Question } from './types'\n\nexport function transformInlineDefinitions(form: Form): Form {\n  if (!form.definitions) {\n    return form\n  }\n\n  const transformInlineDefinitionsQuestions = (questions: Question[]): Question[] => {\n    for (let qi = 0; qi < questions.length; qi++) {\n      const question = questions[qi]\n      if (question.switch) {\n        for (const switchKey of Object.keys(question.switch)) {\n          const oldSwitch = question.switch[switchKey]\n          const newSwitch: Question[] = []\n          for (let si = 0; si < oldSwitch.length; si++) {\n            const value = oldSwitch[si]\n            if (typeof value === 'string' && value.startsWith('definition:')) {\n              const definitionID = value.replace(/^definition:/, '')\n              const definition = form.definitions![definitionID]\n              if (!definition) {\n                console.error(`Unknown question set definition: ${definitionID}`)\n                continue\n              }\n              newSwitch.push(...transformInlineDefinitionsQuestions(definition))\n            } else {\n              newSwitch.push(...transformInlineDefinitionsQuestions([value as Question]))\n            }\n          }\n          questions[qi].switch![switchKey] = newSwitch\n        }\n      }\n    }\n\n    return questions\n  }\n\n  for (let pi = 0; pi < form.pages.length; pi++) {\n    form.pages[pi].questions = transformInlineDefinitionsQuestions(form.pages[pi].questions)\n  }\n\n  return form\n}\n","import React, { createContext, useContext, useState, useEffect, useCallback } from 'react'\nimport formSchema from '../form.schema.json'\nimport { Question, Copy, Form, Value, Values, Errors } from '../lib/types'\nimport { canContinue } from '../forms'\nimport { Box } from 'grommet'\nimport { omit, get } from 'lodash'\nimport { Spinner, Markdown, Card } from '../components/helper-components'\nimport { LanguageContext } from './language'\nimport ky from 'ky'\nimport yaml from 'js-yaml'\nimport Ajv from 'ajv'\nimport { getFlattenedQuestions } from '../forms/index'\nimport { isQuestionValid } from '../lib/validation'\nimport { transformInlineDefinitions } from '../lib/inline'\nimport amplitude from 'amplitude-js'\n\nexport interface FormState {\n  form: Form\n  setValue: (question: Question, value: Value, additionalValues?: Record<string, Value>) => void\n  setError: (id: string, value: Copy[]) => void\n  values: Values\n  errors: Errors\n  translateCopy: <C extends Copy | undefined>(\n    copy: C,\n    variables?: Record<string, string>\n  ) => C extends Copy ? string : string | undefined\n  translateByID: (id: string, variables?: Record<string, string>) => string\n  completion: Record<string, boolean>\n  pageIndex: number\n  setPage: (index: number) => void\n  clearForm: () => void\n}\n\nconst initialState = {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  form: undefined,\n  values: {},\n  errors: {},\n  setValue: (question: Question, value: Value, additionalValues?: Record<string, Value>) => {},\n  setError: (id: string, value: Copy[]) => {},\n}\n\nexport const FormContext = createContext<FormState>(initialState as any)\n\ntype FormError = {\n  message: string\n  error?: any\n}\n\nexport const FormProvider: React.FC = (props) => {\n  const [form, setForm] = useState<Form | undefined>(initialState.form)\n  const [values, setValues] = useState<Values>(initialState.values)\n  const [errors, setErrors] = useState<Errors>(initialState.errors)\n  const [completion, setCompletion] = useState<Record<string, boolean>>({})\n  const [pageIndex, setPageIndex] = useState<number>(0)\n  const [formValidationError, setFormValidationError] = useState<FormError | undefined>()\n  const { language } = useContext(LanguageContext)\n\n  useEffect(() => {\n    const effect = async () => {\n      // Load the form.yaml\n      //\n      // TODO: experiment with nextjs to see if we can embed this file instead\n      // of fetching it. This'll speed up page load. Next would allow us to\n      // get the benefits of ejecting CRA without ejecting.\n      const [form, formSample] = await Promise.all([ky.get('form.yml').text(), ky.get('form.sample.yml').text()])\n\n      let contents, sampleContents\n      try {\n        // Parse the YAML -> JSON\n        contents = yaml.safeLoad(form, {\n          json: true,\n        }) as Form\n        sampleContents = yaml.safeLoad(formSample, {\n          json: true,\n        }) as Form\n      } catch (err) {\n        setFormValidationError({\n          message: 'Failed to parse YAML form',\n          error: err,\n        })\n        return\n      }\n\n      // States will build their own form in `form.yml` from the example in `form.sample.yml`.\n      // By default, we'll use the sample version until a state starts building their form in\n      // `form.yml`.\n      const useSample = contents === null\n      let rawForm = useSample ? sampleContents : contents\n\n      // During local development, we validate the form structure against\n      // our JSON Schema and render any errors.\n      if (process.env.NODE_ENV === 'development') {\n        const ajv = new Ajv({\n          allErrors: true,\n        })\n        const validator = ajv.compile(formSchema)\n        validator(rawForm)\n        if (validator.errors) {\n          console.error(validator.errors)\n          const errors = validator.errors.filter(({ dataPath, message }) => {\n            // Filter out error messages about the default (empty) form.yml schema.\n            return !(\n              dataPath === '' &&\n              message &&\n              ['should be string,null', 'should match exactly one schema in oneOf'].includes(message)\n            )\n          })\n          setFormValidationError({\n            message: `${useSample ? 'form.sample.yml' : 'form.yml'} failed validation\\n${errors.map(\n              (d) => `\\n  - ${d.dataPath} ${d.message}`\n            )}`,\n          })\n        }\n      }\n\n      // Inline any top-level quesiton set definitions:\n      rawForm = transformInlineDefinitions(rawForm)\n\n      setForm(rawForm)\n    }\n\n    effect().catch((err) => {\n      console.error(err)\n    })\n  }, [])\n\n  const setError = (key: string, value: Copy[]) => setErrors({ ...errors, [key]: value })\n  const setValue = (question: Question, value: Value, additionalValues?: Record<string, Value>) => {\n    console.log('[Google Analytics] sending event: Answer Updated')\n    gtag('event', 'Answer Updated', {\n      id: question.id,\n      value,\n    })\n    amplitude.getInstance().logEvent('Answer Updated', {\n      id: question.id,\n      value,\n    })\n    // console.log(values);\n    // console.log(values.employed_in_new_jersey, values['relationship-to-employer'], values['describe-situation']);\n\n    // Insert the new value, plus additionaValues, into values and remove any fields\n    // that would now map to `undefined`.\n\n    let newValues = { ...values, [question.id]: value, ...(additionalValues || {}) }\n\n    // console.log(newValues);\n    // console.log(newValues.employed_in_new_jersey, newValues['relationship-to-employer'], newValues['describe-situation']);\n\n    if (\n      (values.employed_in_new_jersey !== newValues.employed_in_new_jersey ||\n        values['relationship-to-employer'] !== newValues['relationship-to-employer']) &&\n      newValues['describe-situation'] !== undefined\n    ) {\n      delete newValues.benefits\n      delete newValues['describe-situation']\n      delete newValues['job-protections']\n    }\n\n    if (value === undefined) {\n      newValues = omit(newValues, question.id)\n    }\n    newValues = omit(\n      newValues,\n      Object.keys(additionalValues || {}).filter((k) => additionalValues![k] === undefined)\n    )\n\n    setValues(newValues)\n\n    if (process.env.NODE_ENV === 'development') {\n      console.log('Form values: ', newValues)\n    }\n\n    const { errors: validationErrors, dependencies } = isQuestionValid(question, value, values, form!)\n    let newErrors =\n      validationErrors.length > 0 ? { ...errors, [question.id]: validationErrors } : omit(errors, question.id)\n    // Note: we only support question references within the same page. That's probably good enough,\n    // but we could expand this in the future if needed.\n    const page = form!.pages[pageIndex]\n    for (const dep of dependencies) {\n      if (values[dep] !== undefined) {\n        const q = getFlattenedQuestions(page.questions, values).find((q) => q.id === dep)!\n        // Note: we ignore deps here. We could recursively traverse them if we want, but we'll need\n        // to avoid cycles. So we just handle a single level of depth (which should be good enough) for now.\n        const { errors: depErrors } = isQuestionValid(q, values[dep], newValues, form!)\n        newErrors = depErrors.length > 0 ? { ...newErrors, [q.id]: depErrors } : omit(newErrors, q.id)\n      }\n    }\n    setErrors(newErrors)\n\n    const canContinueFromPage = canContinue(page, newValues, newErrors)\n    setCompletion({\n      ...completion,\n      [pageIndex]: canContinueFromPage,\n    })\n  }\n\n  const translateCopy = useCallback(\n    (copy, variables) => {\n      if (!copy) {\n        return undefined\n      }\n\n      let text\n      if (language in copy) {\n        text = copy[language]\n      } else if ('en' in copy) {\n        text = copy['en']\n      } else {\n        text = 'UNKNOWN STRING'\n      }\n\n      // Apply templating variables by looking for `{{VARIABLE_NAME}}` fields.\n      // The value is evaluated as the first truthy value of:\n      //  1. If the key starts with `id:`, then the remainder of the key is considered a question ID\n      //     and the corresponding value from the current set of form values is used.\n      //  2. If a matching key is supplied in the `variables` argument to `translateCopy`.\n      //  3. If a matching key exists in the form's top-level variables map.\n      //  4. If nothing else, then the variable is left as-is (f.e.: {{VARIABLE_NAME}}).\n      text = text.replace(/\\{\\{([a-ziA-Z0-9._:-]+)\\}\\}/g, (m, key) => {\n        // `key` is the regex-captured value inside the curly braces:\n        let value = get(variables || form?.variables, key)\n        if (key.startsWith('id:')) {\n          const questionID = key.slice(3)\n          value = values[questionID] ? String(values[questionID]) : value\n        }\n        // If we don't recognize this variable, then default to rendering\n        // all of `{{VARIABLE_NAME}}` since that'll make the issue clearest.\n        return value ? value : m\n      })\n\n      return text\n    },\n    [form, language, values]\n  ) as FormState['translateCopy']\n\n  const translateByID = (id: string, variables?: Record<string, string>): string => {\n    return translateCopy(form!.instructions[id], variables)\n  }\n\n  const setPage = (index: number) => {\n    setPageIndex(index)\n    window.scrollTo(0, 0)\n  }\n\n  /**\n   * This hook is purely for testing, where it'll prefill form values so we can test\n   * functionality later on in the form.\n   */\n  // const [prefilled, setPrefilled] = useState(false)\n  // useEffect(() => {\n  //   if (prefilled || !form || process.env.NODE_ENV !== 'development') return\n\n  //   // Initialize form with some starter values for testing.\n  //   // Note Number values won't render, but the value is there.\n  //   const testValues: Record<string, [Value] | [Value, Record<string, Value>]> = {\n  //     /* eslint-disable @typescript-eslint/camelcase */\n  //     agreement: [true],\n  //     employed_in_new_jersey: ['laid-off-in-new-jersey'],\n  //     'relationship-to-employer': ['receiving-partial-unemployment'],\n  //   }\n  //   for (const [id, v] of Object.entries(testValues)) {\n  //     const [value, additionalValues] = v\n  //     const vv = values[id]\n  //     if (vv === value || (Array.isArray(value) && Array.isArray(vv) && value.length === vv.length)) {\n  //       continue\n  //     }\n\n  //     for (const [i, page] of form.pages.entries()) {\n  //       for (const question of getFlattenedQuestions(page.questions, values)) {\n  //         if (question.id === id) {\n  //           if (i !== pageIndex) {\n  //             setPageIndex(i)\n  //             // 1337 hacks\n  //             return\n  //           }\n\n  //           setValue(question, value, additionalValues)\n  //           // 1337 hacks\n  //           return\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   // now that we've prefilled the values, stop overwriting them with the initial values.\n  //   setPrefilled(true)\n  // })\n\n  const clearForm = () => {\n    setValues({})\n    setErrors({})\n    setPageIndex(0)\n    setCompletion({})\n  }\n\n  useEffect(() => {\n    if (form) {\n      // Update the page title\n      document.title = translateCopy(form.title)\n\n      // Upsert the page description\n      let description = document.querySelector('meta[name=\"description\"]')\n      if (!description) {\n        description = document.createElement('meta')\n        description.setAttribute('name', 'description')\n        document.head.appendChild(description)\n      }\n      description.setAttribute('content', translateCopy(form.description))\n    }\n  }, [form, translateCopy])\n\n  if (formValidationError) {\n    const content = `\n## ⚠️ Form Parsing Error\n\n${formValidationError.message}\n\n${formValidationError.error ? '```' + JSON.stringify(formValidationError.error, null, 2) + '```' : ''}`\n\n    return (\n      <Card\n        margin={{ vertical: 'medium', horizontal: 'auto' }}\n        pad={{ horizontal: 'medium', vertical: 'small' }}\n        width={{ max: '800px' }}\n      >\n        <Box pad=\"medium\">\n          <Markdown>{content}</Markdown>\n        </Box>\n      </Card>\n    )\n  }\n\n  if (!form) {\n    return (\n      <Box pad=\"medium\">\n        <Spinner />\n      </Box>\n    )\n  }\n\n  const value: FormState = {\n    form,\n    values,\n    setValue,\n    errors,\n    setError,\n    translateCopy,\n    translateByID,\n    completion,\n    pageIndex,\n    setPage,\n    clearForm,\n  }\n\n  return <FormContext.Provider value={value}>{props.children}</FormContext.Provider>\n}\n","import React, { useContext } from 'react'\nimport { Button } from './helper-components'\nimport { Card } from './helper-components'\nimport { Box, Text, Image, ResponsiveContext, Heading, Paragraph } from 'grommet'\nimport { LanguageContext } from '../contexts/language'\nimport { FormContext } from '../contexts/form'\nimport { range } from 'lodash'\nimport { StyledSelect } from './helper-components/StyledSelect'\nimport { FormTrash } from 'grommet-icons'\nimport amplitude from 'amplitude-js'\n\ninterface Props {\n  pages: string[]\n}\n\nconst languages = [\n  { title: 'English', value: 'en' },\n  // NJ isn't using Chinese language translations\n  // { title: '中文', value: 'zh' },\n  { title: 'Español', value: 'es' },\n]\n\nconst Sidebar: React.FC<Props> = (props) => {\n  const { pages } = props\n  const { values, clearForm, translateByID, form, pageIndex, setPage, completion } = useContext(FormContext)\n  const { language, setLanguage } = useContext(LanguageContext)\n  const size = useContext(ResponsiveContext)\n\n  const currentPage = pages[pageIndex]\n  const maxCompletedPage = range(0, form.pages.length)\n    .map<number>((i) => (completion[i] ? 1 : 0))\n    .reduce((i, j) => i + j, 0)\n  const percent = Math.floor((maxCompletedPage / pages.length) * 100)\n\n  const canClickPage = (i: number) => {\n    return range(0, i).every((index) => completion[index])\n  }\n\n  const onChangeLanguage = ({ value }: any) => {\n    console.log('[Google Analytics] sending event: Change Language')\n    gtag('event', 'Change Language', {\n      prevLanguage: language,\n      newLanguage: value,\n    })\n    amplitude.getInstance().logEvent('Change Language', {\n      prevLanguage: language,\n      newLanguage: value,\n    })\n\n    setLanguage(value)\n  }\n\n  return (\n    <Box\n      flex={{ shrink: 0 }}\n      margin={size === 'large' ? { left: 'small' } : { top: 'small' }}\n      direction=\"column\"\n      width={size === 'large' ? '350px' : '100%'}\n      style={{ maxWidth: '850px' }}\n    >\n      <Card pad=\"medium\" direction={size === 'medium' ? 'row' : 'column'}>\n        {form.seal && (\n          <Box margin={{ bottom: 'medium' }}>\n            <Image src={form.seal} style={{ maxHeight: '175px', maxWidth: '100%', objectFit: 'contain' }} />\n          </Box>\n        )}\n        <Box flex={{ grow: 1 }} margin={{ left: size === 'medium' ? '24px' : 'none' }}>\n          <Box>\n            <Heading level={4} margin=\"none\">\n              {translateByID('language')}\n            </Heading>\n            <StyledSelect\n              a11yTitle=\"select language\"\n              margin={{ top: 'xsmall' }}\n              options={languages}\n              labelKey=\"title\"\n              valueKey={{ key: 'value', reduce: true }}\n              value={language}\n              onChange={onChangeLanguage}\n            />\n          </Box>\n          <Box margin={{ top: '24px' }}>\n            <Box direction=\"row\" justify=\"between\">\n              <Heading level={4} margin=\"none\">\n                {translateByID('progress')}\n              </Heading>\n              <Paragraph margin=\"none\">{percent}%</Paragraph>\n            </Box>\n            <Box\n              margin={{ top: 'xsmall' }}\n              style={{ width: '100%', height: '12px', borderRadius: '12px', background: '#F2F2F2' }}\n            >\n              <Box style={{ width: `${percent}%`, height: '100%', borderRadius: '12px', background: '#3A80C2' }} />\n            </Box>\n            <Box margin={{ top: '24px' }}>\n              <Button\n                onClick={clearForm}\n                disabled={Object.keys(values).length === 0}\n                label={translateByID('clear-form')}\n                icon={<FormTrash style={{ marginRight: '4px' }} />}\n              />\n            </Box>\n          </Box>\n          <Box margin={{ top: '24px' }}>\n            {size === 'large' ? (\n              /* On larger screens, we show all section titles as a list */\n              pages.map((page, i) => {\n                return (\n                  <Text\n                    style={{\n                      cursor: canClickPage(i) ? 'pointer' : 'not-allowed',\n                      opacity: currentPage === page ? '100%' : canClickPage(i) ? '50%' : '20%',\n                    }}\n                    // TODO: In production, add a `canClickPage(i) && ` below to prevent folks from jumping forward.\n                    onClick={() => canClickPage(i) && setPage(i)}\n                    margin={{ bottom: 'xsmall' }}\n                    key={page}\n                  >\n                    {page}\n                  </Text>\n                )\n              })\n            ) : (\n              <>\n                {/* On small screens, we collapse the section titles to a Select */}\n                <Heading level={4} margin=\"none\">\n                  {translateByID('section')}\n                </Heading>\n                <StyledSelect\n                  a11yTitle=\"select section\"\n                  margin={{ top: 'xsmall' }}\n                  options={pages.map((page, i) => ({ page, i, disabled: !canClickPage(i) }))}\n                  labelKey=\"page\"\n                  valueKey={{ key: 'i', reduce: true }}\n                  disabledKey=\"disabled\"\n                  value={pageIndex as any} /* These type definitions don't support values as numbers */\n                  // TODO: In production, add a `canClickPage(i) && ` below to prevent folks from jumping forward.\n                  onChange={({ value: i }) => setPage(i)}\n                />\n              </>\n            )}\n          </Box>\n        </Box>\n      </Card>\n    </Box>\n  )\n}\n\nexport default Sidebar\n","import React, { useContext, useEffect } from 'react'\nimport { Question as QuestionInterface } from '../lib/types'\nimport { getComponent, getSwitch } from '../forms'\nimport { getSections } from '../lib/sections'\nimport { Box, Heading, Text } from 'grommet'\nimport { FormContext } from '../contexts/form'\nimport { Markdown } from './helper-components'\nimport amplitude from 'amplitude-js'\n\ninterface Props {\n  question: QuestionInterface\n  previous: QuestionInterface | undefined\n}\n\nconst Question: React.FC<Props> = (props) => {\n  const { question, previous } = props\n  const Component = getComponent(question.type)\n\n  const { values, errors, form, translateCopy, translateByID } = useContext(FormContext)\n\n  const value = values[question.id]\n  const error = errors[question.id]\n  let switchComponent: HTMLDivElement | null = null\n\n  useEffect(() => {\n    if (value && form.variables?.autoscroll) {\n      switchComponent?.scrollIntoView({ behavior: 'smooth' })\n    }\n  }, [value, form, switchComponent])\n\n  useEffect(() => {\n    amplitude.getInstance().logEvent('Question Rendered', {\n      id: question.id,\n      value,\n    })\n  })\n\n  // If question is \"sections\" but there are no sections, don't render.\n  if (question.type === 'sections' && getSections(question.sections, form, values).length === 0) {\n    return <Box />\n  }\n\n  const isNote = ['instructions-only', 'warning-only'].includes(question.type)\n  const isStriped = ['instructions-only', 'warning-only'].includes(question.type)\n  console.log('script here Questions.txs');\n\n  return (\n    <Box\n      direction=\"row\"\n      // Remove margin between sections:\n      margin={{ top: question.type === 'sections' && previous?.type === 'sections' ? 'none' : '48px' }}\n    >\n      {/* Optionally inserts a vertical stripe alongside the question: */}\n      {isStriped && (\n        <Box\n          flex={{ grow: 0, shrink: 0 }}\n          basis=\"8px\"\n          background={question.type === 'warning-only' ? '#FFAE00' : '#3A80C2'}\n        />\n      )}\n\n      <Box direction=\"column\" pad={{ vertical: isStriped ? '16px' : 'none' }}>\n        {(question.name || question.instructions) && (\n          <Box\n            fill={true}\n            className=\"question-heading-box\"\n            pad={{ horizontal: 'large' }}\n            margin={{ bottom: isNote ? 'none' : '16px' }}\n          >\n            {question.name && (\n              <Box direction=\"row\" align=\"start\">\n                <Heading\n                  style={{\n                    maxWidth: 'none',\n                  }}\n                  level={isNote ? 2 : 4}\n                  margin={{ horizontal: 'none', top: 'none', bottom: question.instructions ? '8px' : 'none' }}\n                >\n                  {translateCopy(question.name)}\n                  {!question.required && !isNote && question.type !== 'sections' && (\n                    <em> ({translateByID('optional')})</em>\n                  )}\n                </Heading>\n              </Box>\n            )}\n            {question.instructions && <Markdown size=\"small\">{translateCopy(question.instructions)}</Markdown>}\n          </Box>\n        )}\n\n        <Component question={question} />\n        {error && (\n          <Box pad={{ horizontal: 'large' }}>\n            {error.map((e) => (\n              <Text key={e.en} margin={{ top: 'xsmall' }} color=\"#E42906\">\n                {translateCopy(e)}\n              </Text>\n            ))}\n          </Box>\n        )}\n        <Box ref={(el) => (switchComponent = el)}>\n          {question.switch &&\n            getSwitch(question.switch, value as string | string[])?.map((q, i, all) => (\n              <Question question={q} previous={i > 0 ? all[i - 1] : undefined} key={q.id} />\n            ))}\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default Question\n","import React, { ReactNode } from 'react'\nimport { Page, Text, View, Document, StyleSheet, Font, Link } from '@react-pdf/renderer'\nimport { Form, Values, Question, Option } from '../lib/types'\nimport { getFlattenedQuestions } from '../forms'\nimport { getSections } from '../lib/sections'\nimport { FormState } from '../contexts/form'\nimport moment from 'moment'\nimport regular from '../fonts/Roboto-Regular.ttf'\nimport medium from '../fonts/Roboto-Medium.ttf'\nimport bold from '../fonts/Roboto-Bold.ttf'\n\nFont.register({\n  family: 'Roboto',\n  fonts: [\n    { src: regular, fontWeight: 'normal' },\n    { src: medium, fontWeight: 'medium' },\n    { src: bold, fontWeight: 'bold' },\n  ],\n})\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    fontFamily: 'Roboto',\n  },\n  pageContent: {\n    padding: '48px',\n    flexGrow: 1,\n  },\n  heading: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  questionTitle: {\n    fontSize: 14,\n    fontWeight: 'medium',\n    marginBottom: 8,\n  },\n  questionAnswer: {\n    fontSize: 12,\n  },\n  sectionTitle: {\n    fontSize: 12,\n    marginBottom: 8,\n    fontWeight: 'medium',\n  },\n  sectionContent: { fontSize: 10 },\n  questionSection: {\n    paddingTop: 12,\n    borderTop: '1px solid black',\n  },\n})\n\nconst linkRegex = /\\[([^[]+)\\](\\(.*\\))/gm\nconst urlRegex = /\\((http[^)]+)\\)/\n\nfunction stripBasicMarkdown(content: string) {\n  if (!content) {\n    return content\n  }\n\n  content = content.replace('#', '').replace(/\\*/g, '')\n\n  const contentParts: any[] = content.split(linkRegex)\n  const finalParts: any[] = []\n\n  contentParts.forEach((part) => {\n    if (urlRegex.test(part)) {\n      const url = part.replace(/[{()}]/g, '')\n      finalParts.push(': ')\n      finalParts.push(\n        <Link style={{ marginLeft: 8, color: '#7D4CDB' }} src={url}>\n          {url}\n        </Link>\n      )\n      return\n    }\n    finalParts.push(part)\n  })\n\n  return finalParts\n}\n\ninterface Props {\n  form: Form\n  values: Values\n  translateCopy: FormState['translateCopy']\n}\n\nconst Icon: React.FC<{ option: Option }> = ({ option }) => {\n  return (\n    <View\n      key={option.id}\n      style={{\n        marginRight: 8,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: option.icon ? option.icon.color : 'grey',\n        height: 20,\n        width: 20,\n        borderRadius: 10,\n      }}\n    >\n      <Text style={{ fontSize: 12 }}>{option.icon?.label}</Text>\n    </View>\n  )\n}\n\nconst PDF: React.FC<Props> = (props) => {\n  const { translateCopy, form, values } = props\n  let questions: Question[] = []\n\n  form.pages.forEach((p) => {\n    questions = questions.concat(getFlattenedQuestions(p.questions, values))\n  })\n\n  function getValue(question: Question, values: Values): string | ReactNode {\n    if (question.type === 'multiselect' && values[question.id]) {\n      const multiselectAnswers = (values[question.id] as string[]).map((optionId) => {\n        const option = question.options!.find((o) => o.id === optionId)\n        if (!option) {\n          return <View />\n        }\n        if (!option.icon) {\n          return `\\n• ${translateCopy(option.name)}`\n        }\n        return (\n          <View\n            style={{ alignItems: 'flex-start', marginBottom: 8, display: 'flex', flexDirection: 'row' }}\n            key={question.id}\n          >\n            <Icon option={option} />\n            <Text style={{ fontSize: 12, width: '90%' }}>{translateCopy(option.name)}</Text>\n          </View>\n        )\n      })\n      return <View>{multiselectAnswers}</View>\n    }\n    if (question.type === 'single-select') {\n      const option = question.options!.find((o) => o.id === values[question.id])\n      if (option) {\n        return <Text style={styles.questionAnswer}>{translateCopy(option.name)}</Text>\n      }\n    }\n    if (question.type === 'checkbox') {\n      return <Text style={styles.questionAnswer}>{translateCopy(question.options![0].name)}</Text>\n    }\n    if (question.type === 'sections') {\n      return (\n        <View>\n          <Text style={styles.questionTitle}>{translateCopy(question.sections?.name)}</Text>\n          {getSections(question.sections, form, values).map(({ section, options }, i) => (\n            <View\n              wrap={false}\n              style={{\n                padding: 12,\n                border: '1px solid black',\n                backgroundColor: '#F8F8F8',\n                marginBottom: 12,\n                marginTop: i === 3 ? 48 : 0,\n              }}\n              key={`${translateCopy(section.title)}_${i}`}\n            >\n              <View\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                  alignItems: 'flex-start',\n                  marginBottom: 12,\n                }}\n              >\n                <Text style={styles.sectionTitle}>{translateCopy(section.title)}</Text>\n                <View style={{ display: 'flex', flexDirection: 'row' }}>\n                  {options.map((o) => (\n                    <Icon key={o.id} option={o} />\n                  ))}\n                </View>\n              </View>\n              <Text style={styles.sectionContent}>{stripBasicMarkdown(translateCopy(section.content))}</Text>\n            </View>\n          ))}\n        </View>\n      )\n    }\n\n    return <View />\n  }\n\n  return (\n    <Document>\n      <Page size=\"A4\" style={styles.page}>\n        <View style={styles.pageContent}>\n          <Text style={styles.heading}>{translateCopy(form.title)}</Text>\n          <Text style={{ fontSize: 12, marginBottom: 20 }}>Completed {moment().format('MMMM DD, YYYY')}</Text>\n          <Text style={{ fontSize: 12, marginBottom: 20 }}>\n            Below is a summary of your responses and the benefits and protections that may be relevant for you, based on\n            the answers you provided.\n          </Text>\n\n          {questions.map((q, i) => {\n            const value = getValue(q, values)\n            const name = translateCopy(q.name)\n            const isPresentationalQuestion = q.type === 'sections' || q.type === 'instructions-only'\n            const hasPageBreak = q.type === 'instructions-only' || q.id === 'terminal-eligibility-job-protections'\n            if (!value || (q.type === 'sections' && getSections(q.sections, form, values).length === 0)) {\n              return <View />\n            }\n            return (\n              <View\n                break={hasPageBreak}\n                style={{ marginTop: hasPageBreak ? 32 : 0, marginBottom: 32 }}\n                key={`${q.id}_${i}`}\n              >\n                <Text style={styles.questionTitle}>\n                  {isPresentationalQuestion ? stripBasicMarkdown(translateCopy(q.instructions!)) : `${i + 1}. ${name}`}\n                </Text>\n\n                {value}\n              </View>\n            )\n          })}\n        </View>\n      </Page>\n    </Document>\n  )\n}\n\nexport default PDF\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Card, Button, Markdown } from './helper-components'\nimport { Box, ResponsiveContext, Heading } from 'grommet'\nimport Sidebar from './Sidebar'\nimport { FormContext } from '../contexts/form'\nimport Question from './Question'\nimport { FormPrevious, FormNext } from 'grommet-icons'\nimport PDF from './PDF'\nimport { pdf } from '@react-pdf/renderer'\nimport amplitude from 'amplitude-js'\n\nconst Form: React.FC<{}> = () => {\n  const { form, translateByID, translateCopy, completion, pageIndex, setPage, values } = useContext(FormContext)\n  const size = useContext(ResponsiveContext)\n\n  const pageTitles = [...form.pages.map((page) => translateCopy(page.title))]\n\n  const pageComponents = [\n    ...form.pages.map((page) => (\n      <Box direction=\"column\" justify=\"start\" key={page.heading.en} margin=\"none\">\n        <Box pad={{ horizontal: 'large' }}>\n          <Heading margin={{ horizontal: 'none', top: 'none', bottom: page.instructions ? '24px' : 'none' }} level={3}>\n            {translateCopy(page.heading)}\n          </Heading>\n          {page.instructions && <Markdown size=\"small\">{translateCopy(page.instructions)}</Markdown>}\n        </Box>\n        {page.questions.map((question, i) => (\n          <Question question={question} previous={i > 0 ? page.questions[i - 1] : undefined} key={question.id} />\n        ))}\n      </Box>\n    )),\n  ]\n\n  const onClickNext = () => setPage(pageIndex + 1)\n  const onClickBack = () => setPage(pageIndex - 1)\n\n  const [previousURL, setPreviousURL] = useState<string>()\n  const onDownload = async () => {\n    console.log('[Google Analytics] sending event: Download')\n    gtag('event', 'Download')\n    amplitude.getInstance().logEvent('Download')\n\n    // NOTE: we use the imperative react-pdf API here instead of `BlobProvider` because BlobProvider\n    // renders the PDF in the foreground on document update, which blocks the UI. We only want to render\n    // the PDF after the user clicks on the download button so that we don't block UI updates as the\n    // user completes the form.\n    const fileName = 'new-jersey-eligiblity.pdf'\n    const blob = await pdf(<PDF form={form} values={values} translateCopy={translateCopy} />).toBlob()\n\n    if (!blob) {\n      // TODO: we should consider incorporating Sentry here.\n      gtag('event', 'PDF Generation Failed')\n      amplitude.getInstance().logEvent('PDF Generation Failed')\n      console.error('Failed to generate PDF')\n      return\n    }\n\n    // For most browsers, we can use the HTML5 download API. But for IE, we have to use\n    // the msSaveBlob API. This code is based on the react-pdf codebase.\n    if (window.navigator.msSaveBlob) {\n      window.navigator.msSaveBlob(blob, fileName)\n      return\n    }\n\n    // Attach a <a> element that we'll use to trigger the HTML5 download API\n    // for this blob:\n    const a = document.createElement('a')\n    a.setAttribute('style', 'display: none;')\n    a.setAttribute('target', '_blank')\n    document.body.appendChild(a)\n    const url = window.URL.createObjectURL(blob)\n    a.setAttribute('href', url)\n    a.setAttribute('download', fileName)\n    a.click()\n    if (previousURL) {\n      window.URL.revokeObjectURL(previousURL)\n    }\n    setPreviousURL(url)\n  }\n\n  // Track page views\n  useEffect(() => {\n    if (!form) {\n      return\n    }\n\n    console.log('[Google Analytics] sending page call: ', form.pages[pageIndex].title.en)\n    gtag('event', 'page_view', {\n      title: form.pages[pageIndex].title.en,\n    })\n    amplitude.getInstance().logEvent('Page View', {\n      title: form.pages[pageIndex].title.en,\n    })\n  }, [form, pageIndex])\n\n  return (\n    <Box\n      align=\"center\"\n      pad=\"medium\"\n      direction=\"column\"\n      width=\"100%\"\n      style={{ maxWidth: size === 'large' ? '1200px' : '850px' }}\n    >\n      <Box\n        width=\"100%\"\n        height=\"100%\"\n        justify=\"center\"\n        direction={size === 'large' ? 'row' : 'column'}\n        align={size === 'large' ? 'start' : 'center'}\n      >\n        <Card justify=\"between\" flex={{ grow: 1, shrink: 1 }} pad={{ vertical: '48px' }}>\n          {pageComponents[pageIndex]}\n          <Box justify=\"between\" pad={{ horizontal: 'large' }} margin={{ top: '48px' }} direction=\"row\">\n            {(pageIndex > 0 && (\n              <Button onClick={onClickBack} label={translateByID('back')} icon={<FormPrevious />} />\n            )) || <Box />}\n            {pageIndex + 1 < pageTitles.length && (\n              <Button\n                primary={pageIndex === 0}\n                onClick={onClickNext}\n                disabled={!completion[pageIndex]}\n                icon={<FormNext />}\n                reverse={true}\n                label={pageIndex === 0 ? translateByID('get-started') : translateByID('next')}\n              />\n            )}\n            {pageIndex === pageTitles.length - 1 && null}\n            {pageIndex === pageTitles.length - 1 && (\n              <Button\n                primary={true}\n                disabled={!completion[pageIndex]}\n                label=\"Download\"\n                onClick={() => completion[pageIndex] && onDownload()}\n              />\n            )}\n          </Box>\n        </Card>\n        <Sidebar pages={pageTitles} />\n      </Box>\n    </Box>\n  )\n}\n\nexport default Form\n","import React, { useContext } from 'react'\nimport { Box, Image, Paragraph, ResponsiveContext } from 'grommet'\nimport './USDR.css'\n\n/**\n * The USDR component wraps an underlying component with USDR branding.\n */\nexport const USDR: React.FC = (props) => {\n  /**\n   * - Header with USDR logo, app name, link to GitHub\n   * - Footer with \"built by etc\", links to socials\n   */\n  return (\n    <Box direction=\"column\" height={{ min: '100vh' }}>\n      <Box>\n        <Header />\n      </Box>\n\n      <Box flex={{ grow: 1 }} align=\"center\">\n        {props.children}\n      </Box>\n\n      <Box>\n        <Footer />\n      </Box>\n    </Box>\n  )\n}\n\nconst Header: React.FC = () => {\n  // For now, we will not render a header.\n  return null\n\n  // return (\n  //   <Box background={{ color: '#FFFFFF' }} elevation=\"xsmall\" align=\"center\">\n  //     <Box\n  //       width=\"100%\"\n  //       justify=\"start\"\n  //       style={{ maxWidth: '1200px' }}\n  //       pad={{ horizontal: 'medium', vertical: '16px' }}\n  //       direction=\"row\"\n  //       align=\"center\"\n  //     >\n  //       <a href=\"https://www.usdigitalresponse.org/\" target=\"_blank\" rel=\"noopener noreferrer\" tabIndex={-1}>\n  //         <Image style={{ display: 'block' }} width=\"32px\" src=\"./USDR-icon-BW.png\" margin={{ right: '12px' }} />\n  //       </a>\n  //       <Heading level={4} margin=\"none\">\n  //         Pandemic Unemployment Assistance Demo\n  //       </Heading>\n  //     </Box>\n  //   </Box>\n  // )\n}\n\nconst Footer: React.FC = () => {\n  const size = useContext(ResponsiveContext)\n\n  return (\n    <Box background={{ color: '#FFFFFF' }} elevation=\"medium\" align=\"center\">\n      <Box\n        width=\"100%\"\n        justify=\"between\"\n        style={{ maxWidth: size === 'large' ? '1200px' : '850px' }}\n        pad={{ vertical: '16px', horizontal: 'medium' }}\n        direction=\"row\"\n        align=\"center\"\n        className=\"usdr-box\"\n      >\n        <Box justify=\"start\" direction=\"row\" align=\"center\">\n          <Paragraph style={{ fontWeight: 600, flexShrink: 0 }} size=\"small\">\n            Built by\n          </Paragraph>\n          <a href=\"https://www.usdigitalresponse.org/\" target=\"_blank\" rel=\"noopener noreferrer\" tabIndex={-1}>\n            <Image\n              style={{ display: 'block' }}\n              width=\"100px\"\n              src=\"./USDR-full-logo-color.png\"\n              margin={{ horizontal: '12px' }}\n            />\n          </a>\n          <Paragraph size=\"small\" style={{ flexShrink: 1 }}>\n            a nonpartisan effort to assist the U.S. government.\n          </Paragraph>\n        </Box>\n\n        <Box direction=\"row\" align=\"center\">\n          <Paragraph size=\"small\">\n            Run with{' '}\n            <span role=\"img\" aria-label=\"love\">\n              ❤️\n            </span>{' '}\n            by the{' '}\n            <a href=\"https://innovation.nj.gov/\" style={{ color: 'inherit' }}>\n              New Jersey Office of Innovation\n            </a>\n          </Paragraph>\n\n          <a href=\"https://github.com/newjersey/dol-eligibility-tool/\" style={{ margin: '4px 0 0 12px' }}>\n            <svg height=\"20\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"20\" aria-hidden=\"true\">\n              <path\n                fillRule=\"evenodd\"\n                d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n              ></path>\n            </svg>\n          </a>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Grommet } from 'grommet'\nimport './App.css'\nimport Form from './components/Form'\nimport { LanguageProvider } from './contexts/language'\nimport { FormProvider } from './contexts/form'\nimport { USDR } from './components/USDR'\nimport values from 'object.values'\nimport { TextEncoder } from 'fastestsmallesttextencoderdecoder'\nimport amplitude from 'amplitude-js'\n\namplitude.getInstance().init('f97e7157248bb243a19ad46f17cdf2d7')\n\n// Load shims\nif (!Object.values) {\n  values.shim()\n}\nif (!window.TextEncoder) {\n  window.TextEncoder = TextEncoder\n}\n\nconst sizing = {\n  header: '26px',\n  subheader: '18px',\n  body: '18px',\n  detail: '14px',\n}\n\nconst theme = {\n  global: {\n    breakpoints: {\n      small: {\n        value: 550,\n      },\n      medium: {\n        value: 1050,\n      },\n    },\n    colors: {\n      text: {\n        dark: 'white',\n        light: 'black',\n      },\n    },\n    focus: {\n      border: {\n        color: '#bfcffb',\n      },\n    },\n    text: {\n      align: 'left',\n    },\n    selected: {\n      background: '#F2F2F2',\n      color: 'black',\n    },\n    control: {\n      border: {\n        color: 'black',\n        radius: '4px',\n      },\n    },\n  },\n  paragraph: {\n    small: { size: sizing.detail },\n    medium: { size: sizing.body },\n    large: { size: sizing.body },\n    xlarge: { size: sizing.body },\n    xxlarge: { size: sizing.body },\n  },\n  heading: {\n    level: {\n      1: {\n        small: { size: sizing.header },\n        medium: { size: sizing.header },\n        large: { size: sizing.header },\n        xlarge: { size: sizing.header },\n        xxlarge: { size: sizing.header },\n      },\n      2: {\n        small: { size: sizing.header },\n        medium: { size: sizing.header },\n        large: { size: sizing.header },\n        xlarge: { size: sizing.header },\n        xxlarge: { size: sizing.header },\n      },\n      3: {\n        small: { size: sizing.header },\n        medium: { size: sizing.header },\n        large: { size: sizing.header },\n        xlarge: { size: sizing.header },\n        xxlarge: { size: sizing.header },\n      },\n      4: {\n        small: { size: sizing.subheader },\n        medium: { size: sizing.subheader },\n        large: { size: sizing.subheader },\n        xlarge: { size: sizing.subheader },\n        xxlarge: { size: sizing.subheader },\n      },\n      5: {\n        small: { size: sizing.subheader },\n        medium: { size: sizing.subheader },\n        large: { size: sizing.subheader },\n        xlarge: { size: sizing.subheader },\n        xxlarge: { size: sizing.subheader },\n      },\n      6: {\n        small: { size: sizing.detail },\n        medium: { size: sizing.detail },\n        large: { size: sizing.detail },\n        xlarge: { size: sizing.detail },\n        xxlarge: { size: sizing.detail },\n      },\n    },\n  },\n  select: {\n    icons: {\n      color: '#000000',\n    },\n    options: {\n      text: {\n        color: 'black',\n      },\n    },\n    container: {\n      borderRadius: '4px',\n    },\n  },\n  radioButton: {\n    gap: '16px',\n  },\n  button: {\n    border: {\n      color: 'transparent',\n    },\n    primary: {\n      color: '#4776f6',\n    },\n  },\n  checkBox: {\n    color: '#FFFFFF',\n    check: {\n      color: '#205EFF',\n    },\n    gap: '16px',\n  },\n}\n\nfunction App() {\n  // `theme as any` because grommet has incomplete TS definitions\n  return (\n    <Grommet className=\"App\" theme={theme as any}>\n      <LanguageProvider>\n        <FormProvider>\n          <USDR>\n            <Form />\n          </USDR>\n        </FormProvider>\n      </LanguageProvider>\n    </Grommet>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}